<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>decorators on Nuttaphat Arunoprayoch</title><link>https://nuttaphat.com/tags/decorators/</link><description>Recent content in decorators on Nuttaphat Arunoprayoch</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 28 Jun 2020 14:18:03 +0800</lastBuildDate><atom:link href="https://nuttaphat.com/tags/decorators/index.xml" rel="self" type="application/rss+xml"/><item><title>Python Decorators</title><link>https://nuttaphat.com/posts/2020/06/python-decorators/</link><pubDate>Sun, 28 Jun 2020 14:18:03 +0800</pubDate><guid>https://nuttaphat.com/posts/2020/06/python-decorators/</guid><description>Objective In this short blog, I would like to introduce Python decorators to everyone. Some of you might have heard and used it daily. And to those who have never heard of it, let go through some demonstration to show how powerful it can be.
What a Python Decorator is TL;DR: It is a Python object that is used to modify function or class regarding its behaviour.
Examples 1.</description></item></channel></rss>