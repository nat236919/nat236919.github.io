<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on Nuttaphat Arunoprayoch</title><link>https://nuttaphat.com/tags/python/</link><description>Recent content in python on Nuttaphat Arunoprayoch</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 25 Jan 2025 15:58:47 +0800</lastBuildDate><atom:link href="https://nuttaphat.com/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Leetcode: Minimum Number of Operations to Move All Balls to Each Box</title><link>https://nuttaphat.com/posts/2025/01/leetcode-minimum-number-of-operations-to-move-all-balls-to-each-box/</link><pubDate>Sat, 25 Jan 2025 15:58:47 +0800</pubDate><guid>https://nuttaphat.com/posts/2025/01/leetcode-minimum-number-of-operations-to-move-all-balls-to-each-box/</guid><description>Introduction This blog post covers a solution to a Leetcode problem that requires calculating the minimum number of operations needed to move all balls to each box. The task is both interesting and practical, showcasing the application of algorithm design for efficiency.
In this article, I&amp;rsquo;ll explain the problem, walk you through my thought process, and share the solution I came up with.
The Problem Link to question
Given a binary string boxes where boxes[i] == '1' represents a ball in the i-th box, and boxes[i] == '0' represents an empty box, calculate the minimum number of operations required to move all balls to each box.</description></item><item><title>Leetcode: Koko Eating Bananas</title><link>https://nuttaphat.com/posts/2025/01/leetcode-koko-eating-bananas/</link><pubDate>Mon, 20 Jan 2025 12:10:36 +0800</pubDate><guid>https://nuttaphat.com/posts/2025/01/leetcode-koko-eating-bananas/</guid><description>Introduction The Koko Eating Bananas problem is an interesting challenge that involves binary search and array manipulation. The goal is to determine the minimum eating speed k such that Koko can eat all the bananas within a given number of hours h.
In this article, I&amp;rsquo;ll explain the problem, walk you through my thought process, and share the solution I came up with.
The Problem Link to question
You are given an array piles where piles[i] represents the number of bananas in the i-th pile.</description></item><item><title>Leetcode: Find the Prefix Common Array of Two Arrays</title><link>https://nuttaphat.com/posts/2025/01/leetcode-find-the-prefix-common-array-of-two-arrays/</link><pubDate>Tue, 14 Jan 2025 15:34:07 +0800</pubDate><guid>https://nuttaphat.com/posts/2025/01/leetcode-find-the-prefix-common-array-of-two-arrays/</guid><description>Introduction The Prefix Common Array problem is a fascinating puzzle that combines array manipulation and set operations. It requires you to find common elements in two arrays at every index and maintain a running count. While the problem may seem tricky at first, breaking it down into smaller steps reveals a very simple approach.
In this article, I&amp;rsquo;ll explain the problem, walk you through my thought process, and share the solution I came up with.</description></item><item><title>Leetcode: Construct K Palindrome Strings</title><link>https://nuttaphat.com/posts/2025/01/leetcode-construct-k-palindrome-strings/</link><pubDate>Sat, 11 Jan 2025 15:19:42 +0800</pubDate><guid>https://nuttaphat.com/posts/2025/01/leetcode-construct-k-palindrome-strings/</guid><description>Introduction When I first came across the Construct K Palindrome Strings problem, I was intrigued by how it tied together two seemingly unrelated concepts: palindromes and character frequencies. It&amp;rsquo;s not just about solving a puzzleâ€”it&amp;rsquo;s about understanding the fundamental properties of strings and how they can be rearranged to meet specific constraints.
In this article, I&amp;rsquo;ll walk you through my thought process, how I approached the problem, and the solution that I implemented.</description></item><item><title>Leetcode: Maximum Subarray</title><link>https://nuttaphat.com/posts/2024/12/leetcode-maximum-subarray/</link><pubDate>Wed, 11 Dec 2024 17:21:03 +0800</pubDate><guid>https://nuttaphat.com/posts/2024/12/leetcode-maximum-subarray/</guid><description>Introduction The Maximum Subarray problem is a classic challenge in computer science and algorithm design. It provides a great exercise for understanding array manipulation, optimization techniques, and dynamic programming. In this article, I&amp;rsquo;ll delve into the problem statement, explore solution approaches, and analyze their efficiencies.
The Problem Link to question
Given an integer array nums, find the contiguous subarray (containing at least one number) that has the largest sum and return its sum.</description></item><item><title>ImpURL</title><link>https://nuttaphat.com/projects/2024/04/impurl/</link><pubDate>Thu, 25 Apr 2024 10:06:18 +0800</pubDate><guid>https://nuttaphat.com/projects/2024/04/impurl/</guid><description>Introduction ImpURL is an experimental and user-friendly web application designed to help you shorten URL links efficiently. In today&amp;rsquo;s fast-paced digital world, the ability to quickly share concise links can streamline communication and improve productivity.
Inspiration The primary motivation behind creating ImpURL was to develop a practical web application and CI/CD pipeline connecting GitHub, Azure, and Netlify seamlessly. By integrating these platforms, ImpURL aims to provide users with a reliable and efficient solution for URL shortening.</description></item><item><title>Leetcode: Minimum Amount of Time to Collect Garbage</title><link>https://nuttaphat.com/posts/2023/11/leetcode-minimum-amount-of-time-to-collect-garbage/</link><pubDate>Tue, 21 Nov 2023 16:44:03 +0800</pubDate><guid>https://nuttaphat.com/posts/2023/11/leetcode-minimum-amount-of-time-to-collect-garbage/</guid><description>Introduction In the bustling city of algorithms and code, even garbage collection becomes an intriguing problem. This blog post delves into the LeetCode problem titled &amp;ldquo;Minimum Amount of Time to Collect Garbage.&amp;rdquo; The objective is to efficiently plan the collection of metal (&amp;lsquo;M&amp;rsquo;), paper (&amp;lsquo;P&amp;rsquo;), and glass (&amp;lsquo;G&amp;rsquo;) garbage spread across houses using three specialized trucks.
The Problem Link to question
You are provided with an array of strings, garbage, where each element represents the assortment of garbage at a particular house.</description></item><item><title>Handle Interactive Shell</title><link>https://nuttaphat.com/posts/2022/10/handle-interactive-shell/</link><pubDate>Sun, 30 Oct 2022 09:50:26 +0800</pubDate><guid>https://nuttaphat.com/posts/2022/10/handle-interactive-shell/</guid><description>Introduction Connecting to a remote service using a python module paramiko has always been one of the well-known methods to handle such tasks. Executing commands and receiving the data from the connected server can be done quickly. The following code is a primary usage of paramiko to interact with the server.
import paramiko host = &amp;#39;127.0.0.1&amp;#39; # server host username = &amp;#39;root&amp;#39; password = &amp;#39;root&amp;#39; # Init SSH client client = paramiko.</description></item><item><title>Python Generators</title><link>https://nuttaphat.com/posts/2022/05/python-generators/</link><pubDate>Mon, 02 May 2022 11:58:13 +0800</pubDate><guid>https://nuttaphat.com/posts/2022/05/python-generators/</guid><description>Objectives In this short blog, I&amp;rsquo;d like to introduce Python Generators. After reading this blog, I do hope that you will understand
What Python generators are What generator function and generator expression are How to use them What are Python Generators? A special function in Python that returns a lazy iterator. It works similar to a list, but it doesn&amp;rsquo;t store all values in memory
Implementation So, why do we need to use generators instead of normal interators (e.</description></item><item><title>Rock Paper Scissors</title><link>https://nuttaphat.com/posts/2022/02/rock-paper-scissors/</link><pubDate>Tue, 08 Feb 2022 16:15:24 +0800</pubDate><guid>https://nuttaphat.com/posts/2022/02/rock-paper-scissors/</guid><description>Source Code
What is Rock Paper Scissors Rock Paper Scissors is a game where two players simultaneously choose one of three options: rock, paper, or scissors. The player who wins the most games wins the game.
It is clear that the game is a pure chance game regarding statistics if players truly randomly choose their choices. However, it is not the case for human behaviour.
The study Social cycling and conditional responses in the Rock-Paper-Scissors game suggest that the game is not purely chance game, but rather a game that is dependent on human behaviour.</description></item></channel></rss>