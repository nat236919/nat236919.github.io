<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Nuttaphat Arunoprayoch</title><link>https://nuttaphat.com/posts/</link><description>Recent content in Posts on Nuttaphat Arunoprayoch</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 02 Aug 2021 17:12:07 +0800</lastBuildDate><atom:link href="https://nuttaphat.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>GitHub Copilot</title><link>https://nuttaphat.com/posts/2021/08/github-copilot/</link><pubDate>Mon, 02 Aug 2021 17:12:07 +0800</pubDate><guid>https://nuttaphat.com/posts/2021/08/github-copilot/</guid><description>What is GitHub Copilot? GitHub-Copilot is basically a smart code autocomplete powered by Codex, the new AI system created by OpenAI. GitHub Copilot understands significantly more context than most code assistants. So, whether it&amp;rsquo;s in a docstring, comment, function name, or the code itself, GitHub Copilot uses the context you&amp;rsquo;ve provided and synthesizes code to match.
I received an invitation to test out GitHub Copilot during its technical preview a couple of weeks ago, and I have been using it on Visual Studio Code ever since.</description></item><item><title>Introducing FastAPI</title><link>https://nuttaphat.com/posts/2021/06/introducing-fastapi/</link><pubDate>Tue, 01 Jun 2021 14:36:15 +0800</pubDate><guid>https://nuttaphat.com/posts/2021/06/introducing-fastapi/</guid><description>Introduction Developing APIs can be painful if we don&amp;rsquo;t know where to start. As I&amp;rsquo;ve always been a fan of Python, it is my first choice for development. It has a great number of frameworks and libraries supporting web development (e.g., Django, Flask, etc.). This time I would like to introduce a super-fast and easy-to-use framework which I&amp;rsquo;ve been using for a couple of years now: FastAPI.
FastAPI FastAPI is a high-performace web framework for creating APIs with Python.</description></item><item><title>Unconventional Russian Roulette</title><link>https://nuttaphat.com/posts/2020/11/unconventional-russian-roulette/</link><pubDate>Fri, 27 Nov 2020 12:57:57 +0800</pubDate><guid>https://nuttaphat.com/posts/2020/11/unconventional-russian-roulette/</guid><description>Source Code
What is Unconventional Russian Roulette? Unconventional Russian Roulette introduces similarities as its origin Russian Roulette. The difference is that instead of using one bullet, it uses three bullets where they are loaded adjacently.
Let&amp;rsquo;s imagine this scenario:
Three bullets are loaded into the cylinder adjacently, Player A has taken a shot and survived. We, as Player B, need to decide whether to take a shot or not. For the sake of simplicity, the game ends this round and here are the conditions:</description></item><item><title>The Humble-Nishiyama Randomness Game</title><link>https://nuttaphat.com/posts/2020/09/the-humble-nishiyama-randomness-game/</link><pubDate>Mon, 14 Sep 2020 16:58:48 +0800</pubDate><guid>https://nuttaphat.com/posts/2020/09/the-humble-nishiyama-randomness-game/</guid><description>Source Code
What is The Humble-Nishiyama Randomness Game? The Humble-Nishiyama Randomness Game is a game invented by two mathematicians: Steve Humble and Yutaka Nishiyama. It is a game that seems fair at the first glance, yet has a way to increase a chance of winning significantly.
The game is based on the idea of Penney Ante game in which 2 players select their own sequential outcomes (n = 3) of a coin toss (either HEADS or TAILS).</description></item><item><title>When Null is An Object</title><link>https://nuttaphat.com/posts/2020/09/when-null-is-an-object/</link><pubDate>Thu, 10 Sep 2020 09:50:26 +0800</pubDate><guid>https://nuttaphat.com/posts/2020/09/when-null-is-an-object/</guid><description>JavaScript is weird; that is all I can say about it. If I were asked to compare JS with an animal, it would definitely be a cat. Despite its overloaded cuteness, it always seems that it is plotting against you. However, at the end of the day, we still love them.
The fun started when I was working on a function that returns an object. The object was meant to be used for displaying data on a webpage.</description></item><item><title>Video Autoplay and Time Skipping</title><link>https://nuttaphat.com/posts/2020/08/video-autoplay-and-time-skipping/</link><pubDate>Thu, 06 Aug 2020 09:30:11 +0800</pubDate><guid>https://nuttaphat.com/posts/2020/08/video-autoplay-and-time-skipping/</guid><description>Recently, I have been tasked to maintain one of the projects that provide a video player service powered by a powerful library videojs which claims to be the most popular open-source HTML5 player framework, according to its site.
The previous engineers working before me had contributed a tremendous work by creating a customised version of our own player which provides functionalities, such as time markers, etc. It worked perfectly. Until I was asked to implement three new functionalities onto the video player:</description></item><item><title>Sun Moon Lake e-Passes</title><link>https://nuttaphat.com/posts/2020/08/sun-moon-lake-e-passes/</link><pubDate>Mon, 03 Aug 2020 21:07:36 +0800</pubDate><guid>https://nuttaphat.com/posts/2020/08/sun-moon-lake-e-passes/</guid><description>Sun Moon Lake is one of the most famous attractions where most tourists who are in Taichung want to visit. Travelling there, of course, is well-known to be time-consuming; moreover, it can be costly. Therefore, several travelling packages are available for purchase at the HSR, TRA, Nantou Bus station, etc. which help save a lot of money. Generally, we would get paper tickets after purchasing.
Recently, in order to match up with an increasing number of mobile usage, The Nantou government has introduced e-Passes which can be purchased online.</description></item><item><title>Python Decorators</title><link>https://nuttaphat.com/posts/2020/06/python-decorators/</link><pubDate>Sun, 28 Jun 2020 14:18:03 +0800</pubDate><guid>https://nuttaphat.com/posts/2020/06/python-decorators/</guid><description>Objective In this short blog, I would like to introduce Python decorators to everyone. Some of you might have heard and used it daily. And to those who have never heard of it, let go through some demonstration to show how powerful it can be.
What a Python Decorator is TL;DR: It is a Python object that is used to modify function or class regarding its behaviour.
Examples 1.</description></item><item><title>Monty Hall Problem</title><link>https://nuttaphat.com/posts/2020/03/monty-hall-problem/</link><pubDate>Sun, 08 Mar 2020 13:20:11 +0800</pubDate><guid>https://nuttaphat.com/posts/2020/03/monty-hall-problem/</guid><description>Source Code
What is Monty Hall Problem The Monty Hall Problem is named for its similarity to the Let&amp;rsquo;s Make a Deal television game show hosted by Monty Hall. The problem is stated as follows. Assume that a room is equipped with three doors. Behind two are goats, and behind the third is a shiny new car. You are asked to pick a door, and will win whatever is behind it.</description></item><item><title>New York Current Job Postings</title><link>https://nuttaphat.com/posts/2019/11/new-york-current-job-postings/</link><pubDate>Mon, 04 Nov 2019 08:31:17 +0800</pubDate><guid>https://nuttaphat.com/posts/2019/11/new-york-current-job-postings/</guid><description>Looking for a job to earn a living is challenging and time consuming, and it might not end up well as expected. Therefore, in order to effectively plan for a career, one must know which career path should be taken. This report analyses job opening positions in NY, USA with a hope that it may be useful individually and socially.
Read with Jupyter Viewer
Presentation</description></item></channel></rss>